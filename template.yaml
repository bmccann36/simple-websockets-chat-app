AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  wiwow-backend

Parameters:
  TableName:
    Type: String
    Default: "simplechat_connections"
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: "Required. Can be characters and underscore only. No numbers or special characters allowed."

Resources:

  ##################################################
  #############?       api gateway       ###########
  ##################################################

  WiwowWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WiwowWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WiwowWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WiwowWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SocketHandler.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WiwowWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WiwowWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SocketHandler.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WiwowWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WiwowWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SocketHandler.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - SendRoute
      - DisconnectRoute
    Properties:
      ApiId: !Ref WiwowWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref WiwowWebSocket

  ##################################################
  ##########?       dynamoDB table       ###########
  ##################################################

  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableName

  # ! Catch all FUNCTION
  SocketHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: ./handler/socketHandler.handler
      MemorySize: 256
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableName
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WiwowWebSocket}/*"
  SocketHandlerPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WiwowWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SocketHandler
      Principal: apigateway.amazonaws.com

Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value:
      !Join [
        "",
        [ "wss://", !Ref WiwowWebSocket, ".execute-api.", !Ref "AWS::Region", ".amazonaws.com/", !Ref "Stage" ],
      ]
